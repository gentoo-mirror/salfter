These scripts produce ebuilds that work with minimal tweaking:

make-coin-ebuild-autotools.sh
  makes ebuilds for coins forked from Bitcoin 0.9
  (uses Dogecoin ebuilds in this overlay as the template; produces
   separate daemon and CLI ebuilds)

make-coin-ebuild-autotools-v2.sh
  makes ebuilds for coins forked from Bitcoin 0.10
  (uses Bitcoin ebuilds in the bitcoin overlay as the template; produces
   separate daemon and CLI ebuilds)

make-coin-ebuild-makefile.sh
  makes ebuilds for coins forked from Bitcoin 0.8.x and earlier
  (uses Bitgem ebuild in this overlay as the template; produces daemon
   ebuild only)

If an ebuild fails, it'll usually be in the install phase where it tries to
copy a file that doesn't exist.  For makefile-based coins, doc/README might
be doc/README.md instead.  For autotools-based ebuilds, few have updated
manpages and bash-completion scripts.

Scripts are called with two parameters.  The first is the coin name, in
all-lowercase.  The second is a combination of GitHub user and repository,
separated by a slash.  Here are some examples:

./make-coin-ebuild-makefile.sh fudcoin CarsonCloak/fudcoin

./make-coin-ebuild-autotools.sh acoin acoin-project/acoin

./make-coin-ebuild-autotools-v2.sh unobtanium unobtanium-official/Unobtanium

I run coin daemons on a headless box, so GUI ebuilds aren't produced.
